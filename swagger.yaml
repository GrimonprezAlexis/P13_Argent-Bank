swagger: '2.0'

info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'

termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1

schemes:
  - http

tags:
- name: "Transaction"
  description: "Everything about transactions"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"
paths:
  /transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction
      summary: Find all transactions
      description: API for fetching user transactions
      parameters:
        - in: header
          name: Authorization
          description: Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: User transactions retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/TransactionsResponse'
        '400':
          description: Invalid fields
        '500':
          description: Internal server error

  /transactions/{id}:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction
      summary: Get transaction by ID
      description: API for fetching transaction by ID
      parameters:
        - in: header
          name: Authorization
          description: Bearer JWT token
          required: true
          type: string
        - in: path
          name: id
          description: ID of the transaction
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Transaction retrieved successfully
          schema:
            $ref: '#/definitions/TransactionDetailsResponse'
        '400':
          description: Invalid fields
        '500':
          description: Internal server error

    post:
      tags:
        - Transaction
      summary: Add a new transaction
      description: API for adding a new transaction
      parameters:
        - in: header
          name: Authorization
          description: Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Add transaction payload
          required: true
          schema:
            $ref: '#/definitions/AddTransaction'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction added successfully
          schema:
            $ref: '#/definitions/TransactionResponse'
        '400':
          description: Invalid fields
        '500':
          description: Internal server error

    put:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Update transaction API
      description: API for updating a transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true

        - name: "id"
          in: "query"
          description: "id of the transacton"
          required: true
          type: "string"

        - in: body
          name: body
          description: Update transaction properties
          required: true
          schema:
            $ref: '#/definitions/UpdateTransaction'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction update successully
          schema:
            $ref: '#/definitions/TransactionResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

    delete:
      security:
        - Bearer: []
      tags:
        - Transaction
      summary: "Delete transaction properties"
      description: API for deleting transaction properties
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Delete Transaction properties Payload
          required: true
          schema:
            $ref: '#/definitions/DeleteTransactionProperties'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction property removed successully
          schema:
            $ref: '#/definitions/TransactionResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error 


  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  TransactionsResponse:
    type: object
    properties:
      id:
        type: integer
      amount:
        type: number
      description:
        type: string
    required:
      - id
      - amount
      - description
  TransactionDetailsResponse:
    type: object
    properties:
      id:
        type: integer
      amount:
        type: number
      description:
        type: string
      date:
        type: string
        format: date-time
    required:
      - id
      - amount
      - description
      - date
  AddTransaction:
    type: object
    properties:
      amount:
        type: number
      description:
        type: string
    required:
      - amount
      - description
  UpdateTransaction:
    type: object
    properties:
      amount:
        type: number
      description:
        type: string
    required:
      - amount
      - description
  DeleteTransactionProperties:
    type: object
    properties:
      properties:
        type: array
        items:
          type: string
    required:
      - properties
    properties:
      date:
        type: boolean
        description: transaction date
      description:
        type: boolean
        description: transaction description
      amount:
        type: boolean
        description: transaction amount
      balance:
        type: boolean
        description: transaction balance
      type:
        type: boolean
        description: transaction type
      category:
        type: boolean
        description: transaction category
      notes:
        type: boolean
        description: transaction category
  TransactionResponse:
    type: object
    properties:
      id:
        type: integer
      amount:
        type: number
      description:
        type: string
      date:
        type: string
        format: date-time
    required:
      - id
      - amount
      - description
      - date


  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
