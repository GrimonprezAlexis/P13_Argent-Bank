swagger: '2.0'

info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'

host: localhost:3001
basePath: /api/v1

schemes:
  - http
  - https

tags:
  - name: Transaction
    description: Everything about transactions
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'

paths:
  /transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Finds all transactions API
      description: API for fetching user transactions
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string

      produces:
        - application/json
      responses:
        '200':
          description: User transaction retrieved successully
          schema:
            type: "array"
            items:
              $ref: "#/definitions/TransactionResponse"
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /transactions/:id:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: "Get transaction by id"
      description: API for fetching transaction id
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string

        - name: "id"
          in: "query"
          description: "id of the transacton"
          required: true
          type: "string"
      produces:
        - application/json
      responses:
        '200':
          description: Transaction id retrieved successully
          schema:
            $ref: '#/definitions/TransactionResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error 

    post:
      tags:
        - Transaction Module
      summary: "Add a new transaction"
      description: API for add transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string

        - in: body
          name: body
          description: Add Transaction Payload
          required: true
          schema:
            $ref: '#/definitions/NewTransaction'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction Added Successfully
          schema:
            $ref: '#/definitions/TransactionUpdatedResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
             
    put:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Update transaction API
      description: API for updating a transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string

        - name: "id"
          in: "query"
          description: "id of the transacton"
          required: true
          type: "string"

        - in: body
          name: body
          description: Update transaction properties
          required: true
          schema:
            $ref: '#/definitions/EditTransaction'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction update successully
          schema:
            $ref: '#/definitions/TransactionUpdatedResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

    delete:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: "Delete transaction properties"
      description: API for deleting transaction properties
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
          
        - in: body
          name: body
          description: Delete Transaction properties Payload
          required: true
          schema:
            $ref: '#/definitions/DeleteTransactionProperties'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction property removed successully
          schema:
            $ref: '#/definitions/TransactionUpdatedResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error 


  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
          
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
          
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  TransactionResponse:
    properties:
      id:
        type: number
        description: "transaction id  (ex: 12345)"
      date:
        type: string
        description: "transaction date (ex: 2023-03-13)"
      description:
        type: string
        description: "transaction description (ex: Golden Sun Bakery)"
      amount:
        type: integer
        description: "transaction amount in USD (ex: 20)"
      balance:
        type: number
        description: "transaction balance in USD (ex: 2082.79)"
      currency:
        type: string
        example: $
      type:
        type: string
        description: "transaction type (ex: Electronic)"
      category:
        type: string
        description: "transaction category (ex: Food)"
      notes:
        type: string
        description: "transaction category (ex: Une nouvelle note)"
  
  TransactionUpdatedResponse: 
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: number

  NewTransaction:
    properties:
      date:
        type: string
        description: transaction date
      description:
        type: string
        description: transaction description
      amount:
        type: number
        description: transaction amount
      balance:
        type: number
        description: transaction balance
      type:
        type: string
        description: transaction type
      category:
        type: string
        description: transaction category
      notes:
        type: string
        description: transaction category

  EditTransaction:
    properties:
      category:
        type: string
        description: transaction category
      notes:
        type: string
        description: transaction category

  DeleteTransactionProperties:
    properties:
      date:
        type: boolean
        description: transaction date
      description:
        type: boolean
        description: transaction description
      amount:
        type: boolean
        description: transaction amount
      balance:
        type: boolean
        description: transaction balance
      type:
        type: boolean
        description: transaction type
      category:
        type: boolean
        description: transaction category
      notes:
        type: boolean
        description: transaction category

  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string